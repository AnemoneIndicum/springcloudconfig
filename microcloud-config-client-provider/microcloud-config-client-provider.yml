spring:
  profiles:
    active:
    - dev
---
#端口配置
server:
  port: 8001
  #spring相关
spring:
  mvc:
    favicon:
      enabled: false
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      #url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode:true&characterEncoding:UTF-8&zeroDateTimeBehavior:convertToNull
      url: jdbc:mysql://192.168.1.102:3306/springboot?useUnicode:true&characterEncoding:UTF-8&zeroDateTimeBehavior:convertToNull
      username: root
      password: 123IsYourNewPasswod!
      #password: 123456
      initial-size: 5 # 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
      min-idle: 5
      max-active: 20
      max-wait: 60000 # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 10000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      #min-evictable-idle-time-millis: 18000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      #max-evictable-idle-time-millis: 60000
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 3000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      filter:ilters: stat,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connectionProperties: druid.stat.mergeSql:true;druid.stat.slowSqlMillis:5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #useGlobalDataSourceStat: true
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      #是否启用StatFilter默认值true
      web-stat-filter.enabled: true
      web-stat-filter.url-pattern: /*
      web-stat-filter.exclusions: /*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.woff,*.ttf,/myresource/**,/druid/*
      web-stat-filter.session-stat-enable: true
      web-stat-filter.session-stat-max-count: 1000
      web-stat-filter.principal-session-name: USER_SESSION
      web-stat-filter.principal-cookie-name: USER_COOKIE
      web-stat-filter.profile-enable: true
      # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      #是否启用StatViewServlet默认值true
      stat-view-servlet.enabled: true
      stat-view-servlet.url-pattern: /druid/*
      stat-view-servlet.reset-enable: true
      stat-view-servlet.login-username: admin
      stat-view-servlet.login-password: 123456
      stat-view-servlet.allow: 192.168.1.102,127.0.0.1
      stat-view-servlet.deny: 192.168.0.19
      # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.rui.cn.provider.service.*,com.rui.cn.provider.repository.*

#redis
  redis:
    # Redis服务器地址
    #host: 127.0.0.1
    host: 192.168.1.102
    # Redis服务器连接端口
    port: 6379
    # 连接池中的最大空闲连接
    pool.max-idle: 8
    # 连接池中的最小空闲连接
    pool.min-idle: 0
    # 连接池最大连接数（使用负值表示没有限制）
    pool.max-active: 8
    # 连接池最大阻塞等待时间（使用负值表示没有限制）
    pool.max-wait: -1
    # 连接超时时间（毫秒）
    timeout: 18000
    # Redis 数据库索引（默认为0）
    database: 0
    # Redis 服务器端口
    password:
  application:
    name: permisssion-provider
  profiles: dev
#eureka
eureka:
  client: # 客户端进行Eureka注册的配置
    service-url:
      #defaultZone: http://127.0.0.1:7001/eureka
      defaultZone: http://192.168.1.103:7001/eureka
  instance:
    lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔（默认是90秒）
    instance-id: ${spring.application.name}-${server.port}  # 在信息列表时显示主机名称
    prefer-ip-address: true     # 访问的路径变为IP地址

info:  #设置eureka注册中心得info信息
  app.name: permisssion-provider
  company.name: com.rui.cn
  build.artifactId: $project.artifactId$
  build.version: $project.version$

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.rui.cn.entity.*.**
  typeEnumsPackage: com.rui.cn.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    capital-mode: true
    #序列接口实现类配置,不在推荐使用此方式进行配置,请使用自定义bean注入
    #key-generator: com.baomidou.mybatisplus.incrementer.H2KeyGenerator
    #逻辑删除配置（下面3个配置）
    #logic-delete-value: 0
    #logic-not-delete-value: 1
    #自定义sql注入器,不在推荐使用此方式进行配置,请使用自定义bean注入
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现,不在推荐使用此方式进行配置,请使用自定义bean注入
    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
---
#端口配置
server:
  port: 8001
  #spring相关
spring:
  mvc:
    favicon:
      enabled: false
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/springboot?useUnicode:true&characterEncoding:UTF-8&zeroDateTimeBehavior:convertToNull
      #url: jdbc:mysql://192.168.1.102:3306/springboot?useUnicode:true&characterEncoding:UTF-8&zeroDateTimeBehavior:convertToNull
      username: root
      #password: 123IsYourNewPasswod!
      password: 123456
      initial-size: 5 # 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
      min-idle: 5
      max-active: 20
      max-wait: 60000 # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 10000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      #min-evictable-idle-time-millis: 18000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      #max-evictable-idle-time-millis: 60000
      validation-query: SELECT 1 FROM DUAL
      validation-query-timeout: 3000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      filter:ilters: stat,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connectionProperties: druid.stat.mergeSql:true;druid.stat.slowSqlMillis:5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #useGlobalDataSourceStat: true
      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      #是否启用StatFilter默认值true
      web-stat-filter.enabled: true
      web-stat-filter.url-pattern: /*
      web-stat-filter.exclusions: /*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.woff,*.ttf,/myresource/**,/druid/*
      web-stat-filter.session-stat-enable: true
      web-stat-filter.session-stat-max-count: 1000
      web-stat-filter.principal-session-name: USER_SESSION
      web-stat-filter.principal-cookie-name: USER_COOKIE
      web-stat-filter.profile-enable: true
      # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      #是否启用StatViewServlet默认值true
      stat-view-servlet.enabled: true
      stat-view-servlet.url-pattern: /druid/*
      stat-view-servlet.reset-enable: true
      stat-view-servlet.login-username: admin
      stat-view-servlet.login-password: 123456
      stat-view-servlet.allow: 192.168.1.102,127.0.0.1
      stat-view-servlet.deny: 192.168.0.19
      # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.rui.cn.provider.service.*,com.rui.cn.provider.repository.*

#redis
  redis:
    # Redis服务器地址
    host: 127.0.0.1
    #host: 192.168.1.102
    # Redis服务器连接端口
    port: 6379
    # 连接池中的最大空闲连接
    pool.max-idle: 8
    # 连接池中的最小空闲连接
    pool.min-idle: 0
    # 连接池最大连接数（使用负值表示没有限制）
    pool.max-active: 8
    # 连接池最大阻塞等待时间（使用负值表示没有限制）
    pool.max-wait: -1
    # 连接超时时间（毫秒）
    timeout: 18000
    # Redis 数据库索引（默认为0）
    database: 0
    # Redis 服务器端口
    password:
  application:
    name: permisssion-provider-test
  profiles: test
#eureka
eureka:
  client: # 客户端进行Eureka注册的配置
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
      #defaultZone: http://192.168.1.103:7001/eureka
  instance:
    lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔（默认是30秒）
    lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔（默认是90秒）
    instance-id: ${spring.application.name}-${server.port}  # 在信息列表时显示主机名称
    prefer-ip-address: true     # 访问的路径变为IP地址

info:  #设置eureka注册中心得info信息
  app.name: permisssion-provider
  company.name: com.rui.cn
  build.artifactId: $project.artifactId$
  build.version: $project.version$

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.rui.cn.entity.*.**
  typeEnumsPackage: com.rui.cn.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    capital-mode: true
    #序列接口实现类配置,不在推荐使用此方式进行配置,请使用自定义bean注入
    #key-generator: com.baomidou.mybatisplus.incrementer.H2KeyGenerator
    #逻辑删除配置（下面3个配置）
    #logic-delete-value: 0
    #logic-not-delete-value: 1
    #自定义sql注入器,不在推荐使用此方式进行配置,请使用自定义bean注入
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现,不在推荐使用此方式进行配置,请使用自定义bean注入
    #meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
